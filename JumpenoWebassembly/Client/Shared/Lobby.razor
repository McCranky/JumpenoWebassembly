@using JumpenoWebassembly.Shared.Jumpeno.Entities
@using JumpenoWebassembly.Shared.Jumpeno.Utilities

<div class="wrapper-flex">
    <div class="card card-glass width-75">
        <h1>Lobby of @Settings.GameName</h1>
        @if (Info.StartTimerRunning && !Info.StoppedStartTimer)
        {
            <p class="text-info">Game starting in @Conversions.FramesToTime(Info.FramesToStart)</p> 
        }
        <div class="opt-group">
            <div class="opt @(_section == LobbySection.Info ? "active" : "")" @onclick="@(() => _section = LobbySection.Info)">Info</div>
            <div class="opt @(_section == LobbySection.Players ? "active" : "")" @onclick="@(() => _section = LobbySection.Players)">Players (@Players.Count/@Settings.PlayersLimit)</div>
            <div class="opt @(_section == LobbySection.Chat ? "active" : "")" @onclick="@(() => _section = LobbySection.Chat)">Chat</div>
        </div>

        @switch (_section)
        {
            case LobbySection.Info:
                <GameInfo Mode="@Settings.GameMode.ToString()" Code="@Settings.GameCode" />
                break;
            case LobbySection.Players:
                <PlayerList CreatorId="@Settings.CreatorId" UserId="@Player.Id" Players="@Players" />
                break;
            case LobbySection.Chat:
                <LobbyChat Messages="@_messages" OnMessageSend="@SendMessage" UserId="@Player.Id" />
                break;
        }


        <div class="btn-group">
            @if (Settings.CreatorId == Player.Id)
            {
                @if (Players.Count > 1)
                {
                    if (Settings.GameMode == Enums.GameMode.Player)
                    {
                        if (Info.StoppedStartTimer)
                        {
                            <button class="btn btn-info" @onclick="@SwitchTimer">Resume timer</button>
                        }
                        else
                        {
                            <button class="btn btn-info" @onclick="@SwitchTimer">Pause timer</button> 
                        }
                    }
                    else
                    {
                        if (Info.StartTimerRunning)
                        {
                            <button class="btn btn-info" @onclick="@SwitchStartTimer">Stop timer</button> 
                        }
                        else
                        {
                            <button class="btn btn-info" @onclick="@SwitchStartTimer">Start timer</button> 
                        }
                    }
                    <button class="btn btn-success" @onclick="@StartGame">Start</button>}
                    <button class="btn btn-danger" @onclick="@DeleteGame">Delete</button>
            }
            @if (!(Settings.GameMode == Enums.GameMode.Guided && Player.Id == Settings.CreatorId))
            {
                <button class="btn btn-warning" @onclick="@LeaveLobby">Leave</button>
            }
        </div>
    </div>
</div>
