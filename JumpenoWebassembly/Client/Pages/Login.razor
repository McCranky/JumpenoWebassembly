@page "/login"
@inject NavigationManager Navigation
@inject IAuthService AuthService
@inject IToastService ToastService

<h3>Login</h3>
Please log in below or <NavLink href="register">register</NavLink> for a new account.

<EditForm Model="@user" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control" />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="user.Password" type="password" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Login</button>
    <ValidationSummary />
</EditForm>
<button class="btn btn-primary m-3" @onclick="HandleLoginFacebook">Facebook</button>
<button class="btn btn-danger m-3" @onclick="HandleLoginGoogle">Google</button>
<button class="btn btn-dark m-3" @onclick="HandleLoginAnonym">Anonym</button>

@code {
    private UserLoginRequest user = new UserLoginRequest();

    private async void HandleLogin()
    {
        var result = await AuthService.Login(user);
        if (result.User != null) {
            //await AuthStateProvider.GetAuthenticationStateAsync();

            Navigation.NavigateTo("/", true);
        } else {
            ToastService.ShowError(result.Message);
        }

    }

    private void HandleLoginFacebook()
    {
        Navigation.NavigateTo("api/auth/facebookSignIn", true);
    }

    private void HandleLoginGoogle()
    {
        Navigation.NavigateTo("api/auth/googleSignIn", true);
    }

    private void HandleLoginAnonym()
    {
        Navigation.NavigateTo("api/auth/anonymSignIn", true);
    }
}
