@page "/login"
@inject JumpenoWebassembly.Client.Services.IAuthService AuthService
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager
@inject IToastService ToastService

<h3>Login</h3>
Please log in below or <NavLink href="register">register</NavLink> for a new account.

<EditForm Model="@user" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control" />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="user.Password" type="password" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Login</button>
    <ValidationSummary />
</EditForm>

@code {
    private JumpenoWebassembly.Shared.Models.Request.UserLoginRequest user = new JumpenoWebassembly.Shared.Models.Request.UserLoginRequest();

    private async void HandleLogin()
    {
        var result = await AuthService.Login(user);
        if (!string.IsNullOrWhiteSpace(result.JwtToken)) {
            await LocalStorage.SetItemAsync<string>("authToken", result.JwtToken);
            await AuthStateProvider.GetAuthenticationStateAsync();

            NavigationManager.NavigateTo("/");
        } else {
            ToastService.ShowError(result.Message);
        }

    }
}
