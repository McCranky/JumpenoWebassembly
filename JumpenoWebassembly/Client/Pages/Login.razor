@page "/login"
@inject NavigationManager Navigation
@inject IAuthService AuthService
@inject IToastService ToastService

<div class="wrapper-flex">
    <EditForm Model="@user" OnValidSubmit="HandleLogin" class="auth-form">
        <DataAnnotationsValidator />

        <h1>Please log in</h1>

        <InputText type="email" @bind-Value="@user.Email" placeholder="Email address" />
        <InputText type="password" @bind-Value="@user.Password" placeholder="Password" />
        <button type="submit">Log in</button>

        <p>or register <NavLink href="register">here</NavLink></p>

        <ValidationSummary />
    </EditForm>

    <div class="third-party-logins">
        <button class="facebook" @onclick="@(() => Navigation.NavigateTo("api/auth/facebookSignIn", true))">
            <i class="fab fa-facebook-square"></i>
        </button>
        <button class="google" @onclick="@(() => Navigation.NavigateTo("api/auth/googleSignIn", true))">
            <i class="fab fa-google-plus-square"></i>
        </button>
        <button class="anonym" @onclick="@(() => Navigation.NavigateTo("api/auth/anonymSignIn", true))">
            <i class="fas fa-user-secret"></i>
        </button>
    </div>
</div>

@code {
    private UserLoginRequest user = new UserLoginRequest();

    private async void HandleLogin()
    {
        var result = await AuthService.Login(user);
        if (result.User != null) {
            Navigation.NavigateTo("/", true);
        } else {
            ToastService.ShowError(result.Message);
        }

    }
}
